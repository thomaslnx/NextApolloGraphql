{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/marcos/NextApolloGraphql/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withApollo } from '../libs/apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ALL_CONSULTS } from '../gql/allConsults';\n\nvar Home = function Home() {\n  _s();\n\n  console.log(ALL_CONSULTS);\n\n  var _useQuery = useQuery(ALL_CONSULTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (error) {\n    return __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }\n    }, \"Error\");\n  }\n\n  if (loading) {\n    return __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }\n    }, \"Loading...\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Nextjs, Apollo and GraphQl setup\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, data.companies.map(function (item) {\n    return __jsx(\"ul\", {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, item.id));\n  })));\n};\n\n_s(Home, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\nexport default withApollo({\n  ssr: true\n})(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/marcos/NextApolloGraphql/src/pages/index.tsx"],"names":["React","withApollo","useQuery","ALL_CONSULTS","Home","console","log","loading","error","data","companies","map","item","id","ssr"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AADiB,kBAGgBD,QAAQ,CAACC,YAAD,CAHxB;AAAA,MAGTI,OAHS,aAGTA,OAHS;AAAA,MAGAC,KAHA,aAGAA,KAHA;AAAA,MAGOC,IAHP,aAGOA,IAHP;;AAKf,MAAID,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AAED,MAAID,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAEH,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIE,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAoB,UAAAC,IAAI;AAAA,WACtB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACC,EAAV,CADF,CADsB;AAAA,GAAxB,CAFJ,CAHF,CADF;AAeD,CA5BD;;GAAMT,I;UAG6BF,Q;;;KAH7BE,I;AA8BN,eAAeH,UAAU,CAAC;AAAEa,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0BV,IAA1B,CAAf","sourcesContent":["import React from 'react';\n\nimport { withApollo } from '../libs/apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ALL_CONSULTS } from '../gql/allConsults';\n\nconst Home = () => {\n  console.log(ALL_CONSULTS);\n\n  const { loading, error, data } = useQuery(ALL_CONSULTS);\n\n    if (error) {\n      return <h1>Error</h1>\n    }\n\n    if (loading) {\n      return <h1>Loading...</h1>\n    }\n\n  return(\n    <>\n      <h1>Nextjs, Apollo and GraphQl setup</h1>\n\n      <div>\n        {\n          data.companies.map( item => (\n            <ul key={item.id}>\n              <li>{item.id}</li>\n            </ul>\n          ))\n        }\n      </div>\n    </>\n    );\n}\n\nexport default withApollo({ ssr: true })(Home);"]},"metadata":{},"sourceType":"module"}