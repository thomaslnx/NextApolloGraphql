{"ast":null,"code":"var _jsxFileName = \"/Users/marcos/NextApolloGraphql/src/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withApollo } from '../libs/apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ALL_CONSULTS } from '../gql/allConsults';\n\nconst Home = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_CONSULTS);\n\n  if (error) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }\n    }, \"Error\");\n  }\n\n  if (loading) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }\n    }, \"Loading...\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Nextjs, Apollo and GraphQl setup\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, data.map(item => __jsx(\"ul\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, item.id)))));\n};\n\nexport default withApollo({\n  ssr: true\n})(Home);","map":{"version":3,"sources":["/Users/marcos/NextApolloGraphql/src/pages/index.tsx"],"names":["React","withApollo","useQuery","ALL_CONSULTS","Home","loading","error","data","map","item","id","ssr"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,CAACC,YAAD,CAAzC;;AAEE,MAAIG,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AAED,MAAID,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAEH,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIE,IAAI,CAACC,GAAL,CAAUC,IAAI,IACZ;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACC,EAAV,CADF,CADF,CAFJ,CAHF,CADF;AAeD,CA3BD;;AA6BA,eAAeT,UAAU,CAAC;AAAEU,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0BP,IAA1B,CAAf","sourcesContent":["import React from 'react';\n\nimport { withApollo } from '../libs/apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ALL_CONSULTS } from '../gql/allConsults';\n\nconst Home = () => {\n\n  const { loading, error, data } = useQuery(ALL_CONSULTS);\n\n    if (error) {\n      return <h1>Error</h1>\n    }\n\n    if (loading) {\n      return <h1>Loading...</h1>\n    }\n\n  return(\n    <>\n      <h1>Nextjs, Apollo and GraphQl setup</h1>\n\n      <div>\n        {\n          data.map( item => (\n            <ul key={item.id}>\n              <li>{item.id}</li>\n            </ul>\n          ))\n        }\n      </div>\n    </>\n    );\n}\n\nexport default withApollo({ ssr: true })(Home);"]},"metadata":{},"sourceType":"module"}